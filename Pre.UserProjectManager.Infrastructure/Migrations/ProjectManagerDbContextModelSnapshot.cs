// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pre.UserProjectManager.Infrastructure.Data;

#nullable disable

namespace Pre.UserProjectManager.Infrastructure.Migrations
{
    [DbContext(typeof(ProjectManagerDbContext))]
    partial class ProjectManagerDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Pre.UserProjectManager.Core.Entity.Product", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<decimal>("CarbonFootPrint")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("carbon_footprint");

                    b.Property<decimal>("CarbonFootPrintPerGram")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("carbon_footprint_per_gram");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date_created");

                    b.Property<DateTime>("LastUpdatedTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("last_updated_time");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("name");

                    b.Property<long>("ProjectId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("TimeCreated")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("time_created");

                    b.Property<string>("Unit")
                        .HasColumnType("longtext")
                        .HasColumnName("unit");

                    b.Property<double>("Weight")
                        .HasColumnType("double")
                        .HasColumnName("weight");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("product", (string)null);
                });

            modelBuilder.Entity("Pre.UserProjectManager.Core.Entity.Project", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date_created");

                    b.Property<DateTime>("LastUpdatedTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("last_updated_time");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name");

                    b.Property<DateTime>("TimeCreated")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("time_created");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .HasDatabaseName("ix_prject_name_unique_id");

                    b.HasIndex("UserId", "Name")
                        .HasDatabaseName("ix_prject_name_id");

                    b.ToTable("project", (string)null);
                });

            modelBuilder.Entity("Pre.UserProjectManager.Core.Entity.ProjectAssignment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<long>("AssignedBy")
                        .HasColumnType("bigint")
                        .HasColumnName("assigned_by");

                    b.Property<long>("AssigneeUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("assignee_user_id");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date_created");

                    b.Property<DateTime>("LastUpdatedTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("last_updated_time");

                    b.Property<long>("ProjectId")
                        .HasColumnType("bigint")
                        .HasColumnName("project_id");

                    b.Property<DateTime>("TimeCreated")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("time_created");

                    b.HasKey("Id");

                    b.HasIndex("AssigneeUserId", "ProjectId")
                        .HasDatabaseName("ix_assignee_user_project_id");

                    b.ToTable("project_assignment", (string)null);
                });

            modelBuilder.Entity("Pre.UserProjectManager.Core.Entity.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date_created");

                    b.Property<string>("Email")
                        .HasColumnType("longtext")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("first_name");

                    b.Property<DateTime>("LastLoginDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("last_login_date");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("last_name");

                    b.Property<DateTime>("LastUpdatedTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("last_updated_time");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("password");

                    b.Property<string>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("password_salt");

                    b.Property<DateTime>("TimeCreated")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("time_created");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("user_name");

                    b.HasKey("Id");

                    b.HasIndex("UserName")
                        .HasDatabaseName("ix_user_user_name");

                    b.ToTable("user", (string)null);
                });

            modelBuilder.Entity("Pre.UserProjectManager.Core.Entity.Product", b =>
                {
                    b.HasOne("Pre.UserProjectManager.Core.Entity.Project", "Project")
                        .WithMany("Products")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("fk_product_project_id");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("Pre.UserProjectManager.Core.Entity.Project", b =>
                {
                    b.HasOne("Pre.UserProjectManager.Core.Entity.User", "User")
                        .WithMany("Projects")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .HasConstraintName("fk_project_user_id");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Pre.UserProjectManager.Core.Entity.Project", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Pre.UserProjectManager.Core.Entity.User", b =>
                {
                    b.Navigation("Projects");
                });
#pragma warning restore 612, 618
        }
    }
}
